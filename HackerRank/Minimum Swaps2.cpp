   int swaps = 0;       
    int n = arr.size();
     vector<bool> visit(n, false); //որ նույն ինդեքսը 2-րդ անգամ չնայենք

    for (int i = 0; i < n; i++) {
        // Եթե այս թիվը արդեն ճիշտ տեղում է կամ արդեն այցելել ենք անցնում ենք առաջ
        if (visit[i] || arr[i] == i + 1) {
            continue;
        }
//cycle-ը այս խնդրում ցանկացած տարր, որը սխալ տեղում է
        int cycle_size = 0;  //քանի տարր կա այս cycle-ի մեջ
        int j = i;

        // Երբ վերադառնում ենք այնտեղ, որտեղից սկսել էինք, ու արդեն այցելած է՝ կանգ ենք առնում։
        while (!visit[j]) {
            visit[j] = true; // Նշում ենք, որ այս տեղը արդեն այցելել ենք,որ նորից չվերադառնանք։
            j = arr[j] - 1; // անցնում ենք այն ինդեքսին, որտեղ arr[j] պետք է լինի
            cycle_size++; //հավաքում ենք քանի տարր է սխալ տեղում
        }

        if (cycle_size > 1) {
            swaps += cycle_size - 1;
//Եթե գտածս cycle-ը ունի 2 կամ ավելի տարր, ապա ուղղման համար պետք է անել cycle_size-1 swap      
 //Եթե cycle_size == 1, նշանակում է այդ տարրը արդեն ճիշտ տեղում է
        } 
    }

    return swaps;

